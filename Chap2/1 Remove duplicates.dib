#!markdown

# Remove duplicates

#!csharp

var tc1 = new List<int>(){1,2,3,4,1,3,0,5,6,7,8,5,6};
var tc2 = new List<int>(){1,2,3,4,1,3,0,5,6,7,8,5,6};

#!csharp

// With buffer
public void RemoveDuplicates(List<int> list)
{
    var hs = new HashSet<int>();
    var index = 0;
    while(index < list.Count)
    {
        if(hs.Contains(list.ElementAt(index)))
        {
            list.RemoveAt(index);
        }
        else
        {
            hs.Add(list.ElementAt(index));
            index++;
        }
    }
    
}

#!csharp

RemoveDuplicates(tc1);

#!csharp

var sb = new StringBuilder();
tc1.ForEach(x => sb.Append(x + ","));
Console.WriteLine(sb);

#!csharp

// Without buffer
public void RemoveDuplicates2(List<int> list)
{
    var index = 0;
    while(index < list.Count)
    {
        var index2 = index + 1;
        while(index2 < list.Count)
        {
            if(list.ElementAt(index2) == list.ElementAt(index))
            {
                list.RemoveAt(index2);
            }
            else
            {
                index2++;
            }
        }
        
        index++;
    }
}

#!csharp

RemoveDuplicates(tc2);

#!csharp

var sb2 = new StringBuilder();
tc2.ForEach(x => sb2.Append(x + ","));
Console.WriteLine(sb2);
